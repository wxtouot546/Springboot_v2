<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fc.test.mapper.auto.ThUserMapper">
  <resultMap id="BaseResultMap" type="com.fc.test.model.auto.ThUser">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="ip_id" jdbcType="VARCHAR" property="ipId" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="fraction" jdbcType="INTEGER" property="fraction" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="isdel" jdbcType="CHAR" property="isdel" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
<sql id="Base_Column_List">
	  	  	      	id,
       	  	      	user_id,
       	  	      	ip_id,
       	  	      	password,
       	  	      	fraction,
       	  	      	grade,
       	  	      	isdel,
       	  	      	creat_time,
       	  	    	  	update_time
       	</sql>
<sql id="Base_Column_List1">
  	  	      	us.id,
				gp.user_group_name userGroupName,
				us.user_id,
				us.ip_id,
				ip.ip ipName,
				us.PASSWORD,
				us.fraction,
				us.grade,
				us.isdel,
				us.creat_time,
				us.update_time 
       	</sql>
       	
  <select id="selectByExample" parameterType="com.fc.test.model.auto.ThUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from th_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByu" parameterType="Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List1" />
    from th_user us
    LEFT JOIN th_user_relation_group usgp ON us.id = usgp.user_id
	LEFT JOIN th_user_group gp ON gp.id = usgp.gorup_id
	LEFT JOIN th_ip	ip ON ip.id = us.ip_id
	<where>
		<if test="searchText != null">
			us.user_id like concat('%',#{searchText},'%')
		</if>
		<if test="yongh != null">
			us.user_id like concat('%',#{yongh},'%')
		</if>
		<if test="yonghuzu != null">
			gp.id  = #{yonghuzu}
		</if>
	</where>
  </select>
  <select id="selectAll" parameterType="com.fc.test.model.auto.ThUser" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from th_user
  </select>
  <select id="selectAllbyName" parameterType="com.fc.test.model.auto.ThUser" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from th_user
    where id != #{id}
    AND user_id = #{userId}
  </select>
  
  <select id="selectAllbygrop" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    	<include refid="Base_Column_List" />
    FROM th_user
	where
	 id in (select gp.user_id FROM th_user_relation_group gp  WHERE gp.gorup_id = #{type} GROUP BY gp.user_id)
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from th_user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from th_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fc.test.model.auto.ThUserExample">
    delete from th_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="com.fc.test.model.auto.ThUser">
    insert into th_user (
      	  	       id,
       	  	       user_id,
       	  	       ip_id,
       	  	       password,
       	  	       fraction,
       	  	       grade,
       	  	       isdel,
       	  	       creat_time,
       	  	    	  update_time
       	    )
    values (
	  	  	      	#{id,jdbcType=INTEGER},
       	  	      	#{userId,jdbcType=VARCHAR},
       	  	      	#{ipId,jdbcType=VARCHAR},
       	  	      	#{password,jdbcType=VARCHAR},
       	  	      	#{fraction,jdbcType=INTEGER},
       	  	      	#{grade,jdbcType=INTEGER},
       	  	      	#{isdel,jdbcType=CHAR},
       	  	      	#{creatTime,jdbcType=TIMESTAMP},
       	  	    	  #{updateTime,jdbcType=TIMESTAMP}
       	    )
  </insert>
  
  <insert id="insertSelective" parameterType="com.fc.test.model.auto.ThUser">
    insert into th_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
          
      <if test="id != null">
        id,
      </if>
      
         
      <if test="userId != null">
        user_id,
      </if>
      
         
      <if test="ipId != null">
        ip_id,
      </if>
      
         
      <if test="password != null">
        password,
      </if>
      
         
      <if test="fraction != null">
        fraction,
      </if>
      
         
      <if test="grade != null">
        grade,
      </if>
      
         
      <if test="isdel != null">
        isdel,
      </if>
      
         
      <if test="creatTime != null">
        creat_time,
      </if>
      
         
      <if test="updateTime != null">
        update_time,
      </if>
      
         </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
          <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
          <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
          <if test="ipId != null">
        #{ipId,jdbcType=VARCHAR},
      </if>
          <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
          <if test="fraction != null">
        #{fraction,jdbcType=INTEGER},
      </if>
          <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
          <if test="isdel != null">
        #{isdel,jdbcType=CHAR},
      </if>
          <if test="creatTime != null">
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
          <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
        </trim>
  </insert>
  
  <select id="countByExample" parameterType="com.fc.test.model.auto.ThUserExample" resultType="java.lang.Long">
    select count(*) from th_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExampleSelective" parameterType="map">
    update th_user
    <set>
          <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
          <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
          <if test="record.ipId != null">
        ip_id = #{record.ipId,jdbcType=VARCHAR},
      </if>
          <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
          <if test="record.fraction != null">
        fraction = #{record.fraction,jdbcType=INTEGER},
      </if>
          <if test="record.grade != null">
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
          <if test="record.isdel != null">
        isdel = #{record.isdel,jdbcType=CHAR},
      </if>
          <if test="record.creatTime != null">
        creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      </if>
          <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
         
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  
  <update id="updateByExample" parameterType="map">
    update th_user
    set
            	     	 id = #{record.id,jdbcType=INTEGER},
    	         	     	 user_id = #{record.userId,jdbcType=VARCHAR},
    	         	     	 ip_id = #{record.ipId,jdbcType=VARCHAR},
    	         	     	 password = #{record.password,jdbcType=VARCHAR},
    	         	     	 fraction = #{record.fraction,jdbcType=INTEGER},
    	         	     	 grade = #{record.grade,jdbcType=INTEGER},
    	         	     	 isdel = #{record.isdel,jdbcType=CHAR},
    	         	     	 creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
    	         	     	 update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    	         <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  
      <update id="updateByPrimaryKeySelective" parameterType="com.fc.test.model.auto.ThUser">
    update th_user
    <set>
                          <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
                      <if test="ipId != null">
        ip_id = #{ipId,jdbcType=VARCHAR},
      </if>
                      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
                      <if test="fraction != null">
        fraction = #{fraction,jdbcType=INTEGER},
      </if>
                      <if test="grade != null">
        grade = #{grade,jdbcType=INTEGER},
      </if>
                      <if test="isdel != null">
        isdel = #{isdel,jdbcType=CHAR},
      </if>
                      <if test="creatTime != null">
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
                      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
              </set>
    where 
            id = #{id,jdbcType=INTEGER}
                                                                          
  </update>

      	      	   	      	   	      	   	      	   	      	   	      	   	      	   	      	   	      	

  <update id="updateByPrimaryKey" parameterType="com.fc.test.model.auto.ThUser">
    update th_user
    set 
             	        	    	 			user_id = #{userId,jdbcType=VARCHAR},
		     	        	    	 			ip_id = #{ipId,jdbcType=VARCHAR},
		     	        	    	 			password = #{password,jdbcType=VARCHAR},
		     	        	    	 			fraction = #{fraction,jdbcType=INTEGER},
		     	        	    	 			grade = #{grade,jdbcType=INTEGER},
		     	        	    	 			isdel = #{isdel,jdbcType=CHAR},
		     	        	    	 			creat_time = #{creatTime,jdbcType=TIMESTAMP},
		     	        	    	 			update_time = #{updateTime,jdbcType=TIMESTAMP}
		     	        where 
            id = #{id,jdbcType=INTEGER}
                                                                            
  </update>
  
                                                 
</mapper>